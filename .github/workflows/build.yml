name: Build (CMake + vcpkg)

on:
  push:
    branches: ["*"]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache vcpkg directory
        uses: actions/cache@v4
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}

      - name: Cache vcpkg_installed directory
        uses: actions/cache@v4
        with:
          path: vcpkg_installed
          key: ${{ runner.os }}-vcpkg_installed-${{ hashFiles('vcpkg.json') }}

      - name: Clone and bootstrap vcpkg if needed
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          if [ "${{ runner.os }}" = "Windows" ]; then
            .\vcpkg\bootstrap-vcpkg.bat
          else
            ./vcpkg/bootstrap-vcpkg.sh
          fi

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Configure project
        run: |
          mkdir -p build
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build project
        run: cmake --build build --config Debug

      - name: Run tests
        run: ctest --output-on-failure --test-dir build || true
